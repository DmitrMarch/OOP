<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="exam_dbDataSet" targetNamespace="http://tempuri.org/exam_dbDataSet.xsd" xmlns:mstns="http://tempuri.org/exam_dbDataSet.xsd" xmlns="http://tempuri.org/exam_dbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="exam_dbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="exam_dbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Lab10.Properties.Settings.GlobalReference.Default.exam_dbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="filmsTableAdapter" GeneratorDataComponentClassName="filmsTableAdapter" Name="films" UserDataComponentName="filmsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="exam_dbConnectionString (Settings)" DbObjectName="exam_db.dbo.films" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[films] WHERE (([film_name] = @Original_film_name) AND ([genre] = @Original_genre) AND ([start_time] = @Original_start_time) AND ([film_time] = @Original_film_time))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_film_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="film_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_start_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="start_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_film_time" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="film_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[films] ([film_name], [genre], [start_time], [film_time]) VALUES (@film_name, @genre, @start_time, @film_time);
SELECT film_name, genre, start_time, film_time FROM films WHERE (film_name = @film_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@film_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="film_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@start_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="start_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@film_time" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="film_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT film_name, genre, start_time, film_time FROM dbo.films</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[films] SET [film_name] = @film_name, [genre] = @genre, [start_time] = @start_time, [film_time] = @film_time WHERE (([film_name] = @Original_film_name) AND ([genre] = @Original_genre) AND ([start_time] = @Original_start_time) AND ([film_time] = @Original_film_time));
SELECT film_name, genre, start_time, film_time FROM films WHERE (film_name = @film_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@film_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="film_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@start_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="start_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@film_time" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="film_time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_film_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="film_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_start_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="start_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_film_time" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="film_time" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="film_name" DataSetColumn="film_name" />
              <Mapping SourceColumn="genre" DataSetColumn="genre" />
              <Mapping SourceColumn="start_time" DataSetColumn="start_time" />
              <Mapping SourceColumn="film_time" DataSetColumn="film_time" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="genresTableAdapter" GeneratorDataComponentClassName="genresTableAdapter" Name="genres" UserDataComponentName="genresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="exam_dbConnectionString (Settings)" DbObjectName="exam_db.dbo.genres" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[genres] WHERE (([genre_id] = @Original_genre_id) AND ([genre_name] = @Original_genre_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_genre_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[genres] ([genre_name]) VALUES (@genre_name);
SELECT genre_id, genre_name FROM genres WHERE (genre_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@genre_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT genre_id, genre_name FROM dbo.genres</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[genres] SET [genre_name] = @genre_name WHERE (([genre_id] = @Original_genre_id) AND ([genre_name] = @Original_genre_name));
SELECT genre_id, genre_name FROM genres WHERE (genre_id = @genre_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@genre_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_genre_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_genre_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="genre_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="genre_id" ColumnName="genre_id" DataSourceName="exam_db.dbo.genres" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@genre_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="genre_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="genre_id" DataSetColumn="genre_id" />
              <Mapping SourceColumn="genre_name" DataSetColumn="genre_name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="exam_dbConnectionString (Settings)" DbObjectName="exam_db.dbo.genres" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT genre_id, genre_name FROM dbo.genres</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable1TableAdapter" GeneratorDataComponentClassName="DataTable1TableAdapter" Name="DataTable1" UserDataComponentName="DataTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="exam_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT films.film_name, films.start_time, films.film_time, genres.genre_name
FROM     films INNER JOIN
                  genres ON films.genre = genres.genre_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="film_name" DataSetColumn="film_name" />
              <Mapping SourceColumn="start_time" DataSetColumn="start_time" />
              <Mapping SourceColumn="film_time" DataSetColumn="film_time" />
              <Mapping SourceColumn="genre_name" DataSetColumn="genre_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="exam_dbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="exam_dbDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="exam_dbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="films" msprop:Generator_RowEvHandlerName="filmsRowChangeEventHandler" msprop:Generator_RowDeletedName="filmsRowDeleted" msprop:Generator_RowDeletingName="filmsRowDeleting" msprop:Generator_RowEvArgName="filmsRowChangeEvent" msprop:Generator_TablePropName="films" msprop:Generator_RowChangedName="filmsRowChanged" msprop:Generator_UserTableName="films" msprop:Generator_RowChangingName="filmsRowChanging" msprop:Generator_RowClassName="filmsRow" msprop:Generator_TableClassName="filmsDataTable" msprop:Generator_TableVarName="tablefilms">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="film_name" msprop:Generator_ColumnPropNameInTable="film_nameColumn" msprop:Generator_ColumnPropNameInRow="film_name" msprop:Generator_UserColumnName="film_name" msprop:Generator_ColumnVarNameInTable="columnfilm_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="genre" msprop:Generator_ColumnPropNameInTable="genreColumn" msprop:Generator_ColumnPropNameInRow="genre" msprop:Generator_UserColumnName="genre" msprop:Generator_ColumnVarNameInTable="columngenre" type="xs:int" />
              <xs:element name="start_time" msprop:Generator_ColumnPropNameInTable="start_timeColumn" msprop:Generator_ColumnPropNameInRow="start_time" msprop:Generator_UserColumnName="start_time" msprop:Generator_ColumnVarNameInTable="columnstart_time" type="xs:dateTime" />
              <xs:element name="film_time" msprop:Generator_ColumnPropNameInTable="film_timeColumn" msprop:Generator_ColumnPropNameInRow="film_time" msprop:Generator_UserColumnName="film_time" msprop:Generator_ColumnVarNameInTable="columnfilm_time" type="xs:float" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="genres" msprop:Generator_RowEvHandlerName="genresRowChangeEventHandler" msprop:Generator_RowDeletedName="genresRowDeleted" msprop:Generator_RowDeletingName="genresRowDeleting" msprop:Generator_RowEvArgName="genresRowChangeEvent" msprop:Generator_TablePropName="genres" msprop:Generator_RowChangedName="genresRowChanged" msprop:Generator_UserTableName="genres" msprop:Generator_RowChangingName="genresRowChanging" msprop:Generator_RowClassName="genresRow" msprop:Generator_TableClassName="genresDataTable" msprop:Generator_TableVarName="tablegenres">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="genre_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="genre_idColumn" msprop:Generator_ColumnPropNameInRow="genre_id" msprop:Generator_UserColumnName="genre_id" msprop:Generator_ColumnVarNameInTable="columngenre_id" type="xs:int" />
              <xs:element name="genre_name" msprop:Generator_ColumnPropNameInTable="genre_nameColumn" msprop:Generator_ColumnPropNameInRow="genre_name" msprop:Generator_UserColumnName="genre_name" msprop:Generator_ColumnVarNameInTable="columngenre_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataTable1" msprop:Generator_RowEvHandlerName="DataTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="DataTable1RowDeleted" msprop:Generator_RowDeletingName="DataTable1RowDeleting" msprop:Generator_RowEvArgName="DataTable1RowChangeEvent" msprop:Generator_TablePropName="DataTable1" msprop:Generator_RowChangedName="DataTable1RowChanged" msprop:Generator_RowChangingName="DataTable1RowChanging" msprop:Generator_TableClassName="DataTable1DataTable" msprop:Generator_RowClassName="DataTable1Row" msprop:Generator_TableVarName="tableDataTable1" msprop:Generator_UserTableName="DataTable1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="film_name" msprop:Generator_ColumnPropNameInRow="film_name" msprop:Generator_ColumnPropNameInTable="film_nameColumn" msprop:Generator_ColumnVarNameInTable="columnfilm_name" msprop:Generator_UserColumnName="film_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="start_time" msprop:Generator_ColumnPropNameInRow="start_time" msprop:Generator_ColumnPropNameInTable="start_timeColumn" msprop:Generator_ColumnVarNameInTable="columnstart_time" msprop:Generator_UserColumnName="start_time" type="xs:dateTime" />
              <xs:element name="film_time" msprop:Generator_ColumnPropNameInRow="film_time" msprop:Generator_ColumnPropNameInTable="film_timeColumn" msprop:Generator_ColumnVarNameInTable="columnfilm_time" msprop:Generator_UserColumnName="film_time" type="xs:float" />
              <xs:element name="genre_name" msprop:Generator_ColumnPropNameInRow="genre_name" msprop:Generator_ColumnPropNameInTable="genre_nameColumn" msprop:Generator_ColumnVarNameInTable="columngenre_name" msprop:Generator_UserColumnName="genre_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:films" />
      <xs:field xpath="mstns:film_name" />
    </xs:unique>
    <xs:unique name="genres_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:genres" />
      <xs:field xpath="mstns:genre_id" />
    </xs:unique>
    <xs:unique name="DataTable1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DataTable1" />
      <xs:field xpath="mstns:film_name" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_films_genres" msdata:parent="genres" msdata:child="films" msdata:parentkey="genre_id" msdata:childkey="genre" msprop:Generator_UserParentTable="genres" msprop:Generator_UserChildTable="films" msprop:Generator_RelationVarName="relationFK_films_genres" msprop:Generator_ChildPropName="GetfilmsRows" msprop:Generator_UserRelationName="FK_films_genres" msprop:Generator_ParentPropName="genresRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>